interface IArea3 {

    final double PI = 3.1415926;

    double area();
}

interface IShape3 extends IArea3 {

    double perimeter();
}
class Circle3 implements IShape3 {
    public double x;
    public double y;
    private double r;
    // 建構子
    public double getX() {
        return x;
    }
    public double getY() {
        return y;
    }
    public double getR() {
        return r;
    }
    public Circle3(double x, double y, double r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }

    public double area() {
        return PI*r*r;
    }

    public double perimeter() {
        return 2.0*PI*r;
    }
}

 class ans3{
    // 主程式
    public static void main(String[] args) {

        Circle3 c = new Circle3(16.0, 15.0, 16.0);
        Circle3 d = new Circle3(10.0, 10.0, 10.0);
        java.util.Scanner sc =
                new java.util.Scanner(System.in);
        int n;
        n = sc.nextInt();
        if(n==1){
            double m = (c.getR()+d.getR())/2.0;
            Circle3 e = new Circle3(10.0, 10.0,m);
            System.out.print(e.area());
        }
        else if(n==2){
            double m = (c.getR()*d.getR());
            Circle3 e = new Circle3(10.0, 10.0,m);
            System.out.print(e.area());
        }
    }
}
